
// <auto-generated />

using System;
using System.Reflection;
using System.Resources;
using System.Globalization;
using System.Threading;

namespace IGeekFan.FreeKit
{
    /// <summary>
    ///     This is an internal API that supports the FreeKit infrastructure and not subject to
    ///     the same compatibility standards as public APIs. It may be changed or removed without notice in
    ///     any release. You should only use it directly in your code with extreme caution and knowing that
    ///     doing so can result in application failures when updating to a new FreeKit release.
    /// </summary>
    internal static class CoreStrings
    {
        private static readonly ResourceManager _resourceManager = new ResourceManager("IGeekFan.FreeKit.Extras.Properties.CoreStrings", typeof(CoreStrings).Assembly);
		
        private static CultureInfo _resourceCulture;
		
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        public static CultureInfo Culture
        {
            get
            {
                return _resourceCulture;
            }
            set
            {
                _resourceCulture = value;
            }
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name,_resourceCulture);
            for (var i = 0; i < formatterNames.Length; i++)
            {
                value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
            }

            return value;
        }
    }
}

